_G.BringNPCS = true

while _G.BringNPCS do
    local localPlayer = game.Players.LocalPlayer
    local character = localPlayer.Character
    local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")

    if humanoidRootPart then
        local platformSize = Vector3.new(_G.PlatformSize, 50, _G.PlatformSize) -- Adjust the platform size as desired
        local distance = 10 -- Adjust the distance value as per your preference

        for _, enemy in ipairs(workspace.Enemies:GetChildren()) do
            if enemy:IsA("Model") then
                local npcHumanoid = enemy:FindFirstChildOfClass("Humanoid")

                if npcHumanoid and npcHumanoid.Health > 0 then
                    for _, part in ipairs(enemy:GetDescendants()) do
                        if part:IsA("BasePart") then
                            -- Remove decals
                            part:ClearAllChildren()

                            -- Remove effects
                            local effects = part:FindFirstChild("Effects")
                            if effects then
                                effects:Destroy()
                            end

                            -- Make the enemy model invisible
                            part.Transparency = 1
                        end
                    end

                    local npcHead = enemy:FindFirstChild("Head")
                    if npcHead then
                        local npcPosition = npcHead.Position
                        local direction = humanoidRootPart.CFrame.lookVector
                        local offset = direction * distance
                        npcHead.CFrame = humanoidRootPart.CFrame + offset

                        -- Set hitbox size to 25 in all aspects
                        npcHead.Size = Vector3.new(25, 25, 25)

                        -- Disable collision for the hitbox
                        npcHead.CanCollide = false

                        -- Apply the modifications to the hitbox
                        npcHead.Anchored = true
                    end
                else
                    -- Delete the enemy's parts if it is dead
                    enemy:Destroy()
                end
            end
        end

        -- Disable collision for the player's character
        character:SetAttribute("DisableCollision", true)
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    end

    wait() -- Add a delay between iterations
end
